{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "args": [],
        "children": [
            2,
            18,
            9,
            19
        ]
    },
    "2": {
        "id": 2,
        "class": "Subtree",
        "name": "Idle for 5 seconds",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            "08-idle",
            [
                "() => {",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ],
        "decorators": [
            3
        ]
    },
    "3": {
        "id": 3,
        "class": "TimeoutSucceed",
        "name": "",
        "asset-pack": "core",
        "args": [
            5000
        ]
    },
    "5": {
        "id": 5,
        "class": "Subtree",
        "name": "Idle until 'stop-idle' event is heard",
        "asset-pack": "core",
        "parent": 9,
        "args": [
            "08-idle",
            [
                "() => {",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ],
        "decorators": [
            8
        ]
    },
    "8": {
        "id": 8,
        "class": "SucceedOnEvent",
        "name": "",
        "asset-pack": "core",
        "args": [
            "stop-idle",
            [
                "() => {",
                "}"
            ]
        ]
    },
    "9": {
        "id": 9,
        "class": "Parallel",
        "name": "",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            false
        ],
        "children": [
            5,
            10
        ]
    },
    "10": {
        "id": 10,
        "class": "ExecuteScriptAsync",
        "name": "Dispatch 'stop-idle' event after 5 seconds",
        "asset-pack": "core",
        "parent": 9,
        "args": [
            [
                "(succeed, fail) => {",
                "    setTimeout(() => {",
                "        //`emitter` is an EventEmitter that is scoped to a behavior tree instance.",
                "        //The SucceedOnEvent decorator is listening for a 'stop-idle' event to be",
                "        //emitted from the emitter.",
                "        emitter.emit('stop-idle');",
                "        //succeed this behavior",
                "        succeed();",
                "    }, 5000);",
                "}"
            ]
        ]
    },
    "18": {
        "id": 18,
        "class": "Subtree",
        "name": "Center Robot",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            "common/center-robot",
            [
                "() => {",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ]
    },
    "19": {
        "id": 19,
        "class": "Subtree",
        "name": "Center Robot",
        "asset-pack": "core",
        "parent": 1,
        "args": [
            "common/center-robot",
            [
                "() => {",
                "    return {};",
                "}"
            ],
            [
                "(treeResult) => {",
                "}"
            ]
        ]
    }
}